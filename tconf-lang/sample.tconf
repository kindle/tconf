tmp.sysNSTime = time_from_nanos_since_midnight ( src.timact_ns )
tmp.sysMSTime = time_from_millis_since_midnight( get_current_hires_time_in_milliseconds() )
tmp.preseq= veh.CI_SEQNUM
		tmp.lstseq= src.CI_SEQNUM
		IF tmp.lstseq != tmp.preseq THEN
map(:A)
ripple


			IF exists(src.CD_RS_ENC) == #true AND exists(src.CI_SIN) == #true THEN
				tmp.identifier= src.CD_RS_ENC
				tmp.modflag= src.CI_SIN
				
				IF tmp.identifier == "r" AND tmp.modflag == 1 THEN
					tmp.sysTime= #GMTTime
					
					
					tmp.sysDate= #GMTDate
					tmp.closeprice= veh.HST_CLOSE

					IF exists(src.CAN_PRC) == #true  AND src.CAN_PRC != #Blank  THEN
						CAN_DATE = tmp.sysDate
						CAN_TIM_NS = tmp.sysNSTime
					ENDIF

					IF exists(src.OFF_CLOSE) == #true  AND src.OFF_CLOSE != #Blank  THEN
						OFF_CLS_NS = tmp.sysNSTime
						OFF_CLS_DT = tmp.sysDate
					ENDIF

					IF exists(src.BASE_LOAD) == #true  AND src.BASE_LOAD != #Blank  THEN
						tmp.bsld_val= src.BASE_LOAD
						tmp.bsld_cls= veh.BSLD_CLS
						BSLD_NETCH = tmp.bsld_val - tmp.bsld_cls
						IF tmp.bsld_cls != 0 THEN
							BSLD_PCTCH = (tmp.bsld_val - tmp.bsld_cls) / tmp.bsld_cls * 100
						ENDIF

						IF tmp.bsld_val>veh.BSLD_HIGH OR veh.BSLD_HIGH == #Blank THEN
							BSLD_HIGH = tmp.bsld_val
						ENDIF
						IF tmp.bsld_val<veh.BSLD_LOW OR veh.BSLD_LOW == #Blank THEN
							BSLD_LOW = tmp.bsld_val
						ENDIF
						
						IF veh.BLSD_OPEN == #Blank THEN
							BLSD_OPEN = tmp.bsld_val
						ENDIF
						ACTIV_DATE = #GMTDate
						
					ENDIF

					IF exists(src.OFPK_LOAD) == #true  AND src.OFPK_LOAD != #Blank  THEN
						tmp.bsld_val= src.OFPK_LOAD
						tmp.bsld_cls= veh.OPLD_CLS
						OFPK_NETCH = tmp.bsld_val - tmp.bsld_cls
						IF tmp.bsld_cls != 0 THEN
							OFPK_PCTCH = (tmp.bsld_val - tmp.bsld_cls) / tmp.bsld_cls * 100
						ENDIF

						IF tmp.bsld_val>veh.OFPK_HIGH OR veh.OFPK_HIGH == #Blank THEN
							OFPK_HIGH = tmp.bsld_val
						ENDIF
						IF tmp.bsld_val<veh.OFPK_LOW OR veh.OFPK_LOW == #Blank THEN
							OFPK_LOW = tmp.bsld_val
						ENDIF
						
						IF veh.OFPK_OPEN == #Blank THEN
							OFPK_OPEN = tmp.bsld_val
						ENDIF
						ACTIV_DATE = #GMTDate
					ENDIF

					IF exists(src.PEAK_LOAD) == #true  AND src.PEAK_LOAD != #Blank  THEN
						tmp.bsld_val= src.PEAK_LOAD
						tmp.bsld_cls= veh.PKLD_CLS
						PKLD_NETCH = tmp.bsld_val - tmp.bsld_cls
						IF tmp.bsld_cls != 0 THEN
							PKLD_PCTCH = (tmp.bsld_val - tmp.bsld_cls) / tmp.bsld_cls * 100
						ENDIF
						
						IF tmp.bsld_val>veh.PKLD_HIGH OR veh.PKLD_HIGH == #Blank THEN
							PKLD_HIGH = tmp.bsld_val
						ENDIF
						IF tmp.bsld_val<veh.PKLD_LOW OR veh.PKLD_LOW == #Blank THEN
							PKLD_LOW = tmp.bsld_val
						ENDIF

						IF veh.PKLD_OPEN == #Blank THEN
							PKLD_OPEN = tmp.bsld_val
						ENDIF
						ACTIV_DATE = #GMTDate
					ENDIF
					
					IF exists(src.TRDVOL_1) == #true  AND src.TRDVOL_1 != #Blank  THEN
						ACVOL_1 = veh.ACVOL_1 + src.TRDVOL_1
						ACVOL_UNS = veh.ACVOL_UNS + src.TRDVOL_1
					ENDIF
					
					IF exists(src.OPINT_1) == #true  AND src.OPINT_1 != #Blank  THEN
						OPINTNC = src.OPINT_1 - veh.OPINT_1
						OPINT_DATE = tmp.sysDate
					ENDIF

					IF exists(src.VOL_DEC) == #true  AND src.VOL_DEC != #Blank  THEN
						ACVOL_DEC = veh.ACVOL_DEC + src.VOL_DEC
					ENDIF
					
					IF exists(src.INSPRC) == #true THEN
						INSTIM_NS = tmp.sysNSTime
						INSTRD_DT= tmp.sysDate
					ENDIF

					IF exists(src.PRIMACT_1) == #true  AND src.PRIMACT_1 != #Blank THEN

						VALUE_DT1 = #GMTDate
						ACTIV_DATE = #GMTDate
						VALUE_TS1 = #GMTTime
						TIMACT = #GMTTime
											
						tmp.primact= src.PRIMACT_1
						
						IF (tmp.primact == tmp.closeprice) OR (tmp.closeprice == 0) OR (veh.HST_CLOSE == #Blank) THEN
							SEC_ACT_1 = 0
						ELSEIF tmp.primact > tmp.closeprice THEN
							SEC_ACT_1 = tmp.primact - tmp.closeprice
						ELSEIF tmp.primact < tmp.closeprice THEN
							SEC_ACT_1 = tmp.primact - tmp.closeprice
						ENDIF
							
						IF (tmp.primact == veh.PRIMACT_1) THEN
							ACT_TP_1 = 1
						ELSEIF tmp.primact > veh.PRIMACT_1 THEN
							ACT_TP_1 = 2
						ELSEIF tmp.primact < veh.PRIMACT_1 THEN
							ACT_TP_1 = 3
						ENDIF
												
					ENDIF						

					IF exists(src.FAIR_VALUE) == #true  AND src.FAIR_VALUE != #Blank THEN

						FV_DATE = tmp.sysDate
						FV_TIM_NS= tmp.sysNSTime

						tmp.currval= src.FAIR_VALUE
						
						IF tmp.currval == veh.FAIR_VALUE OR veh.FAIR_VALUE == #Blank THEN
							LST_PRCTCK = 3
						ELSEIF tmp.currval < veh.FAIR_VALUE THEN
							LST_PRCTCK = 2
						ELSEIF tmp.currval > veh.FAIR_VALUE THEN
							LST_PRCTCK = 1
						ENDIF
					
					ENDIF
					
					
					IF (exists(src.TRDPRC_1) == #true  AND src.TRDPRC_1 != #Blank)   THEN

						tmp.tradeprice= src.TRDPRC_1
						NUM_MOVES = veh.NUM_MOVES + 1
						TRADE_DATE=tmp.sysDate
						NETCHNG_2 = tmp.tradeprice - veh.TRDPRC_1
						SALTIM_NS=tmp.sysNSTime
						TRDTIM_1 = tmp.sysNSTime

					
						IF exists(src.FAIR_VALUE) == #true  AND src.FAIR_VALUE != #Blank THEN

							tmp.tradeprice = src.FAIR_VALUE
							FV_DATE = tmp.sysDate
							FV_TIM_NS= tmp.sysNSTime
						ENDIF
						
						IF tmp.tradeprice>veh.HIGH_1 OR veh.HIGH_1 == #Blank THEN
							HIGH_1 = tmp.tradeprice
							HIGH_T_MS = tmp.sysMSTime
							
							IF tmp.tradeprice>veh.LOCHIGH OR veh.LOCHIGH == #Blank THEN
								LOCHIGH = tmp.tradeprice
								CONTR_H_DT = tmp.sysDate
								CONTR_HIND = 1
							ENDIF

							IF tmp.tradeprice>veh.YRHIGH OR veh.YRHIGH == #Blank THEN
								
									YRHIGH = tmp.tradeprice
									YRHIGHDAT = #GMTDate
									YCHIGH_IND = 1
									IF tmp.tradeprice > veh.LIFE_HIGH OR veh.LIFE_HIGH == #Blank THEN
										LIFE_HIGH = tmp.tradeprice
										LF_HGH_DAT = #GMTDate
										LIFE_HIND = 1
									ENDIF
							ENDIF
							
						ENDIF
						
						IF tmp.tradeprice<veh.LOW_1 OR veh.LOW_1 == #Blank THEN
							LOW_1 = tmp.tradeprice
							LOW_T_MS = tmp.sysMSTime

							IF tmp.tradeprice<veh.LOCLOW OR veh.LOCLOW == #Blank THEN
								LOCLOW = tmp.tradeprice
								CONTR_L_DT = tmp.sysDate
								CONTR_LIND = 1
							ENDIF
							
							
							IF tmp.tradeprice<veh.YRLOW OR veh.YRLOW == #Blank THEN
								
									YRLOW = tmp.tradeprice
									YRLOWDAT = #GMTDate
									YCLOW_IND = 1

									IF tmp.tradeprice<veh.LIFE_LOW OR veh.LIFE_LOW == #Blank THEN
										LIFE_LOW = tmp.tradeprice
										LF_LOW_DAT = #GMTDate
										LIFE_LIND = 1
									ENDIF
									
							ENDIF
							
						ENDIF

						
						IF tmp.tradeprice>veh.TRDPRC_1 THEN
							PRCTCK_1 = 1
						ELSEIF tmp.tradeprice < veh.TRDPRC_1 THEN
							PRCTCK_1 = 2
						ELSEIF tmp.tradeprice == veh.TRDPRC_1 THEN
							PRCTCK_1 = 3
						ENDIF

						
						IF veh.OPEN_PRC == #Blank THEN
							OPEN_PRC = tmp.tradeprice
							OPEN_T_MS = tmp.sysMSTime
						ENDIF
						
						IF veh.HST_CLOSE != #Blank THEN
							NETCHNG_1 = tmp.tradeprice - tmp.closeprice
							IF tmp.closeprice != 0 THEN
								PCTCHNG = (tmp.tradeprice - tmp.closeprice) / tmp.closeprice * 100
							ENDIF
						ENDIF
						
					ENDIF

					
					IF exists(src.BID) == #true AND src.BID != #Blank THEN
						tmp.bidprice= src.BID
						QUOTE_DATE=tmp.sysDate
						BID_DATE1 = tmp.sysDate
						BID_TIM_NS=tmp.sysNSTime
						QUOTIM_NS=tmp.sysNSTime

						IF veh.OPEN_BID == #Blank THEN
							OPEN_BID=tmp.bidprice
							OPN_BID_MS = tmp.sysNSTime
						ENDIF

						tmp.closebid= veh.CLOSE_BID
						BID_NET_CH = tmp.bidprice - tmp.closebid
						IF tmp.closebid != 0 THEN
							BIDPCTCHNG = (tmp.bidprice - tmp.closebid)/tmp.closebid *100
						ENDIF
						
						IF tmp.bidprice > veh.BID THEN
							BID_TICK1 = 1
						ELSEIF tmp.bidprice < veh.BID THEN
							BID_TICK1 = 2
						ELSEIF tmp.bidprice == veh.BID THEN
							BID_TICK1 = 3
						ENDIF
						
					ENDIF
					
					IF exists(src.ASK) == #true AND src.ASK != #Blank  THEN
						tmp.askprice= src.ASK
						QUOTE_DATE=tmp.sysDate
						ASK_DATE1 = tmp.sysDate
						ASK_TIM_NS=tmp.sysNSTime
						QUOTIM_NS=tmp.sysNSTime
						
						IF veh.OPEN_ASK == #Blank THEN
							OPEN_ASK= tmp.askprice
							OPN_ASK_MS = tmp.sysNSTime
						ENDIF
						
						tmp.closeask= veh.CLOSE_ASK
						ASK_NET_CH = tmp.askprice - tmp.closeask
						
						IF tmp.closeask != 0 THEN
							ASKPCTCHNG = (tmp.askprice - tmp.closeask)/tmp.closeask *100
						ENDIF

						IF tmp.askprice > veh.ASK THEN
							ASK_TICK1 = 1
						ELSEIF tmp.askprice < veh.ASK THEN
							ASK_TICK1 = 2
						ELSEIF tmp.askprice == veh.ASK THEN
							ASK_TICK1 = 3
						ENDIF					
									
					ENDIF
					
					IF exists(src.MID_PRICE1) == #true AND src.MID_PRICE1 != #Blank THEN
					
						QUOTE_DATE=tmp.sysDate
						QUOTIM_NS=tmp.sysNSTime
						
						tmp.midprice= src.MID_PRICE1
						tmp.midclose= veh.MID_CLOSE
						MID_NET_CH = tmp.midprice -tmp.midclose
						IF tmp.midclose != 0 THEN
							MID_PCT_CH = (tmp.midprice -tmp.midclose) / tmp.midclose *100
						ENDIF
							
					ENDIF

					IF exists(src.SETTLE) == #true AND src.SETTLE != #Blank  THEN
						SETTLEDATE= tmp.sysDate
					ENDIF
					
					#import "../Passthrough/passthrough.tconf"
					
				ELSEIF tmp.identifier == "i" AND tmp.modflag == 1 THEN
				
					#import "../Passthrough/passthrough.tconf"
					
				ELSEIF tmp.identifier == "i" AND tmp.modflag == 2 THEN
					#import "../Passthrough/passthrough.tconf"
					pub_hdr.update_type = 7
					tmp.correctlog= "Send Correction Message."
					log_info(tmp.correctlog)
					
				ELSEIF tmp.identifier == "1" OR tmp.identifier == "2" OR tmp.identifier == "3" THEN
			
					
						IF veh.BASE_LOAD != #Blank THEN
							BSLD_CLS = veh.BASE_LOAD
						ENDIF

						IF veh.OFPK_LOAD != #Blank THEN
							OPLD_CLS = veh.OFPK_LOAD
						ENDIF

						IF veh.PEAK_LOAD != #Blank THEN
							PKLD_CLS = veh.PEAK_LOAD
						ENDIF
					
						
						tmp.numday= get_date_day(#GMTDate)


						IF veh.SETTLE != #Blank THEN
							HST_CLOSE = veh.SETTLE
							HSTCLSDATE = veh.SETTLEDATE
							HST_CLS_NS = tmp.sysNSTime
						ELSEIF veh.TRDPRC_1 != #Blank THEN
							HST_CLOSE = veh.TRDPRC_1
							HSTCLSDATE = veh.TRADE_DATE
							HST_CLS_NS = tmp.sysNSTime
						ENDIF

					
						IF veh.OPINT_1 != #Blank THEN
							OPINT_2 = veh.OPINT_1
							OPINT_DAT2 = #GMTDate
						ENDIF

						IF veh.ACVOL_1 != #Blank THEN
							HST_VOL = veh.ACVOL_1
						ENDIF

						IF veh.VWAP != #Blank THEN
							HST_VWAP = veh.VWAP
						ENDIF

						

						IF veh.ACVOL_DEC != #Blank THEN
							HSTVOL_DEC = veh.ACVOL_DEC
						ENDIF
						
						
						IF veh.BID != #Blank THEN
							CLOSE_BID = veh.BID
							CLS_BIDDAT = veh.QUOTE_DATE
							BID_ASK_NS = veh.BID_TIM_NS
							BID_ASK_DT = veh.QUOTE_DATE
						ENDIF
						
						IF veh.ASK != #Blank THEN
							CLOSE_ASK = veh.ASK
							CLS_ASKDAT = veh.QUOTE_DATE
							BID_ASK_NS = veh.ASK_TIM_NS
							BID_ASK_DT = veh.QUOTE_DATE
						ENDIF
						
						IF veh.MID_PRICE1 != #Blank THEN
							MID_CLOSE = veh.MID_PRICE1
						ENDIF

						
						IF tmp.identifier == "1" THEN
						TRDPRC_1=#Blank
TRDPRC_2=#Blank
TRDPRC_3=#Blank
TRDPRC_4=#Blank
TRDPRC_5=#Blank
TRADE_DT2=#Blank
TRADE_DT3=#Blank
TRADE_DT4=#Blank
TRADE_DT5=#Blank
QUOTE_DT2=#Blank
QUOTE_DT3=#Blank
QUOTIM2_NS=#Blank
QUOTIM3_NS=#Blank
NETCHNG_1=#Blank
NETCHNG_2=#Blank
NETCHNG_R2=#Blank
NETCHNG_R3=#Blank
PCTCHNG=#Blank
NUM_MOVES=#Blank
PRCTCK_1=#Blank
SALTIM2_NS=#Blank
SALTIM3_NS=#Blank
SALTIM4_NS=#Blank
SALTIM5_NS=#Blank
HIGH_1=#Blank
HIGH_2=#Blank
HIGH_3=#Blank
HIGH_4=#Blank
HIGH_5=#Blank
HIGH_T_MS=#Blank
LOW_1=#Blank
LOW_2=#Blank
LOW_3=#Blank
LOW_4=#Blank
LOW_5=#Blank
LOW_T_MS=#Blank
OPEN_PRC=#Blank
OPEN_T_MS=#Blank
TRDVOL_1=#Blank
VOL_DEC=#Blank
ACVOL_DEC=#Blank
ACVOL_1=#Blank
ACVOL_UNS=#Blank
BID=#Blank
BID_1=#Blank
BID_2=#Blank
BID_3=#Blank
BID_4=#Blank
BID_NET_CH=#Blank
BIDPCTCHNG=#Blank
BIDSIZE=#Blank
BID_TIM_NS=#Blank
BID_TICK1=#Blank
OPEN_BID=#Blank
OPN_BID_MS=#Blank
BIDTON_SC1=#Blank
BID_TONE1=#Blank
BIDSZ_DEC=#Blank
ASK=#Blank
ASK_1=#Blank
ASK_2=#Blank
ASK_3=#Blank
ASK_4=#Blank
ASK_NET_CH=#Blank
ASKPCTCHNG=#Blank
ASKSIZE=#Blank
ASK_TIM_NS=#Blank
ASK_TICK1=#Blank
OPEN_ASK=#Blank
OPN_ASK_MS=#Blank
ASKTON_SC1=#Blank
ASK_TONE1=#Blank
ASKSZ_DEC=#Blank
UPLIMIT=#Blank
LOLIMIT=#Blank
LST_PRCTCK=#Blank
OFF_CLOSE=#Blank
OFF_CLS_DT=#Blank
OFF_CLS_NS=#Blank
PCTCHG_1W=#Blank
PCTCHG_3M=#Blank
PCTCHG_6M=#Blank
PCTCHG_MTD=#Blank
PCTCHG_YTD=#Blank
NETCHG_1W=#Blank
NETCHG_1M=#Blank
NETCHG_3M=#Blank
NETCHG_6M=#Blank
NETCHG_1Y=#Blank
VWAP=#Blank
VWAP2=#Blank
SEQ_NO=#Blank
PDTRDPRC=#Blank
PREDAYVOL=#Blank
PDTRDDATE=#Blank
TRADE_ID=#Blank
PCT1Y=#Blank
MID_PRICE1=#Blank
MID_PRICE2=#Blank
MID_PRICE3=#Blank
MID_NET_CH=#Blank
MID_PCT_CH=#Blank
CAN_PRC=#Blank
CAN_VOL=#Blank
CANVOL_DEC=#Blank
CAN_DATE=#Blank
CAN_TIM_NS=#Blank
CAN_TRD_ID=#Blank
TRD_P_XID=#Blank
MMT_CLASS=#Blank
PD_TRDID=#Blank
INSPRC=#Blank
INSVOL=#Blank
INSTRD_DT=#Blank
INSTIM_NS=#Blank
INSVOL_DEC=#Blank
INS_TRDID=#Blank
PDSINT_IND=#Blank
CONTR_HIND=#Blank
CONTR_LIND=#Blank
TRD_P_CCY=#Blank
CLR_OBL_DT=#Blank
BSLD_HIGH=#Blank
BSLD_LOW=#Blank
BLSD_OPEN=#Blank
BSLD_NETCH=#Blank
BSLD_PCTCH=#Blank
OFPK_HIGH=#Blank
OFPK_LOW=#Blank
OFPK_OPEN=#Blank
OFPK_NETCH=#Blank
OFPK_PCTCH=#Blank
PKLD_HIGH=#Blank
PKLD_LOW=#Blank
PKLD_OPEN=#Blank
PKLD_NETCH=#Blank
PKLD_PCTCH=#Blank
PDVOL_DEC=#Blank
PD_BUYID=#Blank
PD_SELID=#Blank
PDBUYERID=#Blank
PDSELLRID=#Blank
PDTRDP_XID=#Blank
MFD_TRANTP=#Blank
MFD_NGOTRD=#Blank
MFD_AGENCY=#Blank
MFD_MODTRD=#Blank
MFD_REFTRD=#Blank
MFD_SP_DIV=#Blank
MFD_FRMTRD=#Blank
MFD_ALGTRD=#Blank
MFD_DEFRSN=#Blank
MFD_DEFTYP=#Blank
MFD_DUPTRD=#Blank
SINT_IND=#Blank
CLR_OBL_FL=#Blank
RPT_BS_CCY=#Blank
RPT_P_METH=#Blank
PD_P_CCY=#Blank
PDTRDTM_NS=#Blank
SRC_ES_NS=#Blank
RPT_NOTNL=#Blank
TRNOVR_UNS=#Blank
						

						
						ELSEIF tmp.identifier == "2" THEN
							NUM_MOVES=#Blank
YCHIGH_IND=#Blank
YCLOW_IND=#Blank
YRHI_IND=#Blank
YRLO_IND=#Blank
LIFE_HIND=#Blank
LIFE_LIND=#Blank
BID_TICK1=#Blank
ASK_TICK1=#Blank
BID_TICK2=#Blank
ASK_TICK2=#Blank
							
						ENDIF					
						
					
					
					pub_hdr.update_type = 6
					tmp.crlog= "Send ClosingRun Message."
					log_info(tmp.crlog)
				ENDIF
			ELSE
				log_info("Error: Identifier or Modflag is not existing!")
				
			ENDIF
		ELSE
			tmp.errorlog="Last sequence number is " + to_string(tmp.preseq) + ". Current sequence number is " + to_string(tmp.lstseq) + "."
			log_info(tmp.errorlog)
			log_info("The Sequence Number is Duplicated. Ignore this message.")
		ENDIF
